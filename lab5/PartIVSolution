Consider a subclass that has a method that overrides a method with the same prototype in its superclass.
(a) Define a variable whose static type is the subclass and which references an object of the subclass. If we cast the variable to the superclass type before calling the overridden method
 ((Superclass) subclassvariable).method();
 does Java call the superclass method or the subclass method?

A: Java will call the subclass method.

(b) Define a variable whose static type is the superclass and which references an object of the superclass (but not the subclass). If we cast the variable to the subclass type before calling the method, does Java call the superclass method or the subclass method?

A: We will get a compile-time error.

(c) Suppose you have an object whose class is the subclass. Can you figure out a way to call the superclass method on that object without having to go through the subclass method of the same name?

A: No, I can't.